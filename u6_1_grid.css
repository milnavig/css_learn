/* Две офигенные игры: https://flexboxfroggy.com/#ru
http://cssgridgarden.com/#ru

https://tuhub.ru/posts/css-grid-complete-guide 
CSS Grid Layout (aka "Grid") - это двумерная система компоновки основанная на сетке, цель которой заключается в том чтобы полностью изменить способ проектирования пользовательских интерфейсов основанных на сетке. 

CSS всегда использовался для разметки веб-страниц, но никогда не делал эту работу хорошо. Сначала мы использовали таблицы, потом обтекания (floats), позиционирование и инлайновые блоки (inline-block), но все эти методы по существу являются просто хаками и опускают много важных функциональных возможностей (например, вертикальное выравнивание). Flexbox помог, но он предназначен для более простых одномерных макетов, а не для сложных двумерных (на самом деле Flexbox и Grid очень хорошо работают вместе).
*/

/* Для того чтобы начать работу, нам нужно определить элемент-контейнер с помощью display: grid, настроить размеры колонок и строк с помощью grid-template-columns и grid-template-rows, а также разместить его дочерние элементы внутри сетки с помощью grid-column и grid-row. */

/* Важная терминология
    Контейнер сетки: Элемент к которому применяется display: grid. Это прямой родитель для всех элементов сетки.
    Элемент сетки: Дочерние элементы (прямые потомки) контейнера.
    Линия сетки: Разделительные линии, составляющие структуру для сетки. Они могут быть вертикальными ("линии колонок") или горизонтальными ("линии строк") и располагаться по обе стороны от строки или столбца.
    Трек сетки: Пространство между двумя соседними линиями. Вы можете думать об этом как о столбцах или строках сетки.
    Ячейка сетки: Пространство между линиями двух соседних строк и двух соседних столбцов. Это отдельная "единица измерения" сетки.
    Область сетки: Общее пространство окружённое четырьмя линиями. Область может состоять из любого количества ячеек.
*/

/* Свойства для родительского элемента (Контейнера сетки).
display: grid | inline-grid | subgrid;
    grid - формирует сетку как блок;
    inline-grid - формирует сетку как инлайновый блок;
    subgrid - если ваш контейнер это ещё и элемент (вложенная сетка), то вы можете использовать это свойство для обозначения того, чтобы размеры строк/колонок были взяты из родительского элемента, а не определяли собственный;

grid-template-columns grid-tempate-rows
Определяет колонки и строки сетки с помощью списка значений разделённого пробелами. Значения представляют из себя размер трека, а пробелы между ними представляют линии сетки.
Значения:
    <track-size> - может быть фиксированным размером, процентами или частью свободного пространства в сетке (определяется с помощью единицы fr (fraction));
    <line-name> - произвольное имя на ваш выбор;
*/

/* https://medium.com/@stasonmars/%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D0%B5%D0%B4%D0%B8%D0%BD%D0%B8%D1%86%D0%B0-%D0%B3%D0%B8%D0%B1%D0%BA%D0%BE%D1%81%D1%82%D0%B8-fr-%D0%B2-css-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BD%D1%8B%D0%BC-%D0%B8-%D0%BF%D1%80%D0%BE%D1%81%D1%82%D1%8B%D0%BC-%D1%8F%D0%B7%D1%8B%D0%BA%D0%BE%D0%BC-2a3794c4444

Дробный fr (англ. fraction)
С единицей гибкости (fr) вам не нужно что-то больше пересчитывать — вообще не нужно. На то она и единица гибкости, чтобы быть гибкой.

Если вы указываете ширину в 1fr, то вы можете дальше добавлять столько элементов, сколько возможно и это она об этом позаботиться. Ширина каждого элемента будет равномерно разделена среди дочерних элементов.
*/

/* grid-template-areas

Определяет шаблон сетки ссылаясь на имена областей, которые заданы с помощью свойства grid-area. Повторение названия области приводит к тому, что содержимое охватывает эти ячейки. Точка означает пустую ячейку. Сам синтаксис предоставляет визуализацию структуры сетки.

Значения:
    <grid-area-name> - имя области заданное с помощью grid-area;
    . - точка обозначающая пустую ячейку;
    none - области не определены;
*/

/* grid-template
Сокращение для grid-template-rows, grid-template-columns, и grid-template-areas.
Значения:
    none - устанавливает все три свойства в их начальное значение;
    subgrid - устанавливает grid-template-rows и grid-template-columns в subgrid, и grid-template-areas в его начальное значение;
    <grid-template-rows> / <grid-template-columns> - устанавливает grid-template-columns и grid-template-rows в определённое значение, соответственно, и устанавливает grid-template-areas в none;

grid-column-gap grid-row-gap
Определяет размер ширины линий. Вы можете думать об этом, как о настройке ширины отступов между столбцами и строками.

grid-gap
Сокращение для grid-row-gap и grid-column-gap.
Значение:
    <grid-row-gap> <grid-column-gap> - значения размеров;

justify-items
Выравнивает содержимое вдоль оси строки (в отличии от align-items который выравнивает элементы вдоль оси столбца). Это значение применяется ко всем элементам сетки внутри контейнера.
Значения:
    start - выравнивает содержимое по левой стороне области;
    end - выравнивает содержимое по правой стороне области;
    center - выравнивает содержимое по центру области;
    stretch - заполняет всю ширину области (по умолчанию);

align-items
Выравнивает содержимое вдоль оси столбца (в отличии от justify-items который выравнивает элементы вдоль оси строки). Это значение применяется ко всем элементам сетки внутри контейнера.
Значения:
    start - выравнивание элементов по верхней части области;
    end - выравнивание элементов по нижней части области;
    center - выравнивание элементов по центру области;
    stretch - заполняет всю высоту области (по умолчанию);

justify-content
Иногда общий размер сетки может быть меньше размера контейнера. Такое может случится если у всех элементов сетки заданы фиксированные единицы измерения, например px. В таком случае можно установить выравнивание сетки внутри контейнера. Это свойство выравнивает сетку вдоль оси строки (в отличии от свойства align-content, которое выравнивает сетку вдоль оси столбца).
Значения:
    start - выравнивает сетку по левой стороне контейнера;
    end - выравнивает сетку по правой стороне контейнера;
    center - выравнивает сетку по центру контейнера;
    stretch - масштабирует элементы чтобы сетка могла заполнить всю ширину контейнера;
    space-around - одинаковое пространство между элементами, и полуразмерные отступы по краям;
    space-between - одинаковое пространство между элементами, без отступов по краям;
    space-evenly - одинаковое пространство между элементами, и полноразмерные отступы по краям;

align-content
Иногда общий размер сетки может быть меньше размера контейнера. Такое может случится если у всех элементов сетки зада фиксированные единицы измерения, например px. В таком случае можно установить выравнивание сетки внутри контейнера. Это свойство выравнивает сетку вдоль оси колонки (в отличии от свойства justify-content, которое выравнивает сетку вдоль оси строки).
Значения:
    start - выравнивает сетку по верхней части контейнера;
    end - выравнивает сетку по нижней части контейнера;
    center - выравнивает сетку по центру контейнера;
    stretch - масштабирует элементы чтобы сетка могла заполнить всю высоту контейнера;
    space-around - одинаковое пространство между элементами, и полуразмерные отступы по краям;
    space-between - одинаковое пространство между элементами, без отступов по краям;
    space-evenly - одинаковое пространство между элементами, и полноразмерные отступы по краям;

grid-auto-columns grid-auto-rows
Определяет размер любых автоматически созданных треков (иначе говоря, неявных треков). Неявные треки создаются при явном позиционировании столбцов и строк (через grid-template-rows/grid-template-columns), которые находятся за пределами заданной сетки.
Значения:
    <track-size> - может быть фиксированным размером, процентами, или частью свободного пространства в сетке (с использованием единицы fr);

grid-auto-flow
Если у вас есть элементы, которые вы явно не позиционируете в сетке, запускается алгоритм авто-размещения, чтобы их автоматически разместить. Это свойство контролирует то как алгоритм авто-размещения работает.
Значения:
    row - говорит алгоритму авто-размещения заполнять каждую строку поочерёдно, добавляя новые строки при необходимости;
    column - говорит алгоритму авто-размещения заполнять каждую колонку поочерёдно, добавляя новые колонки при необходимости;
    dense - говорит алгоритму авто-размещения попытаться заполнить дыры в сетке, если более мелкие элементы появляются позже;

*/

/* Свойства для дочерних элементов (Grid элементы) */

/* grid-column-start grid-column-end grid-row-start grid-row-end
Определяют местоположение в сетке ссылаясь на конкретные линии. grid-column-start/grid-row-start - это линия с которой начинается элемент, а grid-column-end/grid-row-end - это линия на которой элемент заканчивается.
Значения:
    <line> - может быть числом ссылающимся на пронумерованную линию, или названием ссылающимся на именованую линию;
    span <number> - элемент, который будет охватывать предоставленное количество треков;
    span <name> - элемент будет будет охватывать пока не достигнет линии с указанным названием;
    auto - указывает автоматическое размещения, автоматическое охват, или охват по умолчанию;

grid-column grid-row
Сокращение для grid-column-start + grid-column-end, и grid-row-start + grid-row-end, соответственно.
Значения:
    <start-line> / <end-line> - каждый из них принимает тоже самое, что и в длинной версии, включая охват;

grid-area
Даёт название элементу чтобы можно было ссылаться на него с помощью шаблона созданного через grid-template-areas свойство.

justify-self
Выравнивает содержимое элемента вдоль оси строки (в отличии от align-self, который выравнивает вдоль оси столбца). Это значение применяется к содержимому внутри отдельного элемента.
Значения:
    start - выравнивает содержимое по левой части области;
    end - выравнивает содержимое по правой части области;
    center -выравнивает содержимое по центру области;
    stretch - заполняет всю ширину области (по умолчанию);

align-self
Выравнивает содержимое элемента вдоль оси столбца (в отличии от justify-self, который выравнивает вдоль оси строки). Это значение применяется к содержимому внутри отдельного элемента.
Значения:
    start - выравнивает содержимое по верхней части области;
    end - выравнивает содержимое по нижней части области;
    center -выравнивает содержимое по центру области;
    stretch - заполняет всю высоту области (по умолчанию);
*/